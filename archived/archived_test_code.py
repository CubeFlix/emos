# print('CREATING CODE')
# print()
# # This code counts to 100 (chr 'd') in the DATA section
# # code2 = bytearray(b'\x01\x01\x00\n\x02\x01\x00\x04\x02\x01\x00\x04\x02\x01\x00\x04\x02\x01\x00\x01\x01\x00\n\x02\x01\x00\x04\x02\x01\x00\x04\x02\x01\x00\x04\x18\x01\x00\n\x02\x01\x00\x04\x02\x01\x00\x04\x02\x01\x00\x04\x02\x01\x00\x64\x1a\x02\x04\x00\x00\x00\x00\x00')
# code2 = bytearray(b'\x01\x05\x00\x02\x01\x00\x01\x05\x00\x18\x05\x00\x02\x01\x00d\x1a\x02\x04\x00\x00\x00\x00\x00!\x02\x01\x00\x00')
# 
# # code = bytearray(b'\x00\x01\x00\x05\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x04\x00\x00\x00\x0b\x02\x04\x00\x00\x00\x08\x00\x00\x00\x17\x02\x04\x00\x00\x004\x00\x00\x00!\x0c\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x0c\x00\x03\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x01\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x00\x03\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x00\x01\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x0b\x00\x01\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x17\x02\x04\x00\x00\x003\x00\x00\x00')
# # code = bytearray(b'\x00\x01\x00\x05\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x04\x00\x00\x00"\x02\x04\x00\x00\x00*\x00\x00\x00!\x02\x00\x05\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x0c\x00\x00\x00\x00\x06\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x01\x01\x00\x06\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x01\x01\x02\x04\x00\x00\x00}\x00\x00\x00\x02\x01\x00\x00\x00\x04#')
# # code = bytearray(b'\x00\x01\x00\x05\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x04\x00\x00\x00"\x02\x04\x00\x00\x00?\x00\x00\x00\x0c\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04!\x02\x01\x00\x00\x00\x00\x02\x00\x05\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x04\x00\x00\x00\x00\x06\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x01\x01\x00\x06\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x01\x01\x02\x04\x00\x00\x00\x92\x00\x00\x00\x02\x01\x00\x00\x00\x04#')
# # code = bytearray(b'\x00\x01\x00\x0b\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x01\x02\x04\x00\x00\x00G\x00\x00\x00\x02\x01\x00\x00\x00\x02\x01\x02\x04\x00\x00\x00:\x00\x00\x00\x01\x02\x04\x00\x00\x00G\x00\x00\x00\x02\x01\x00\x00\x00\x02')
# # print(code)
# # This code calls system interrupt 01
# # code = bytearray(b'\x00\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x01\x00\x00\x00$')
# # This code calls system interrupt 02
# # code = b'\x00\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x02\x00\x00\x00$\x00\x01\x02\x04\x00\x00\x008\x00\x00\x00\x02\x01\x00\x00\x00\x01\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x01'
# # This code also calls system interrupt 02 but dosen't do anything else
# # code = bytearray(b'\x00\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x02\x00\x00\x00$')
# # This code puts "Hello!" into peripheral 1's memory
# # code = b'\x00\x04\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x06\x01\x02\x04\x00\x00\x00+\x00\x00\x00\x02\x01\x00\x00\x00\x06(\x02\x01\x00\x00\x00\xe0'
# # This code calls interrupt e0 and e1 and puts RAX into the stack
# # code = bytearray(b'\x00\x04\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x06\x02\x06\x00\x00\x00Hello!(\x02\x01\x00\x00\x00\xe0(\x02\x01\x00\x00\x00\xe1\x0b\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04')
# # This code is a function test
# # code = bytearray(b'\x00\x01\x00\x05\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x04\x00\x00\x00"\x02\x04\x00\x00\x00?\x00\x00\x00\x0c\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04!\x02\x01\x00\x00\x00\x00\x02\x00\x05\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x0c\x00\x00\x00\x00\x06\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x01\x01\x00\x06\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x01\x01\x02\x04\x00\x00\x00\x92\x00\x00\x00\x02\x01\x00\x00\x00\x04#')
# # This code is a better function test
# # code = bytearray(b'\x0b\x02\x04\x00\x00\x00\x04\x00\x00\x00"\x02\x04\x00\x00\x00*\x00\x00\x00\x0c\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04!\x02\x01\x00\x00\x00\x00)\x01\x02\x04\x00\x00\x00x\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x01\x01\x02\x04\x00\x00\x00x\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x01\x00\x00\x00\x01\x02\x04\x00\x00\x00x\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00#')
# # This code prints "Hello, world!\n" to the STDOut
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x01\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00b\x00\x00\x00\x00\x00\x01\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x0e\x00\x00\x00$!\x02\x01\x00\x00\x00\x00')
# # This code prints "Hello, world!\n" to STDOut and reads one character from STDIn
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x01\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x9f\x00\x00\x00\x00\x00\x01\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x0e\x00\x00\x00$\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x02\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x01\x00\x00\x00$!\x02\x01\x00\x00\x00\x00')
# # This code prints "kevin\b" to STDOut
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x01\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00b\x00\x00\x00\x00\x00\x01\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x06\x00\x00\x00$!\x02\x01\x00\x00\x00\x00')
# # Input test
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x03\x00\x00\x00$!\x02\x01\x00\x00\x00\x00')
# # Hello, world!
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x01\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00p\x00\x00\x00\x00\x00\x01\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x0e\x00\x00\x00$!\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x01\x00\x00\x00')
# # Hello, world! sod
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x01\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00w\x00\x00\x00\x00\x00\x01\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x0e\x00\x00\x00$&\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x01\x00\x00\x00!\x02\x01\x00\x00\x00\x00')
# # Kernel panics
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00$')
# # Create library 0
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\r\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00$!\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00')
# # code = bytearray(b'\x0b\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x0b\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\r\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00$\x0c\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x0c\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00')
# # Create and run library 0
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\r\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00$\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x01\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00$!\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00')
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\r\x00\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00$*\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00!\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00')
# # code2 = bytearray(b'\x00\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x00\x00\x00\x00$')
# # Puts a number into heap
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x0f\x00\x00\x00$\x00\x03\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00E\x00\x00\x00')
# # Fork the thread
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x08\x00\x00\x00$3\x00\x01\x02\x04\x00\x00\x00\xa4\x00\x00\x00\x02\x04\x00\x00\x00\x02\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x06\x00\x00\x00$3\x18\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x02\x00\x00\x00\x01\x02\x04\x00\x00\x00\xa4\x00\x00\x00\x02\x04\x00\x00\x00\x02\x00\x00\x00\x1c\x02\x04\x00\x00\x00\xa4\x00\x00\x00\x1f\x02\x04\x00\x00\x00\xa4\x00\x00\x00')
# # code = bytearray(b'\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x08\x00\x00\x00$3\x00\x01\x02\x04\x00\x00\x00|\x01\x00\x00\x02\x04\x00\x00\x00\x02\x00\x00\x00\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x04\x00\x00\x00\x02\x04\x00\x00\x00\x06\x00\x00\x00$3\x18\x00\x03\x02\x04\x00\x00\x00\x00\x00\x00\x00\x02\x04\x00\x00\x00\x02\x00\x00\x00\x01\x02\x04\x00\x00\x00|\x01\x00\x00\x02\x04\x00\x00\x00\x02\x00\x00\x00\x1c\x02\x04\x00\x00\x00\xa4\x00\x00\x00\x1f\x02\x04\x00\x00\x00\x10\x01\x00\x00\x00\x00\x03\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x00\x0c\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04&\x02\t\x00\x00\x00Thread 0\n\x00\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x01\x00\x00\x00\x00\x00\x01\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\t\x00\x00\x00$!\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x02\x00\x00\x03\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x00\x0c\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04&\x02\t\x00\x00\x00Thread 1\n\x00\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\x01\x00\x00\x00\x00\x00\x01\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x04\x00\x00\x00\t\x00\x00\x00$!\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x02')
# # Function test 2 electric boogaloo
# # code = bytearray(b'\x0b\x02\x04\x00\x00\x00\x04\x00\x00\x00"\x02\x04\x00\x00\x00*\x00\x00\x00\x0b\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04!\x02\x01\x00\x00\x00\x00)\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x00\x01\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x02\x01\x00\x0c\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x04\x0c\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04\x02\x01\x00\x00\x00\x03\x00\x00\x02\x01\x00\x00\x00\x00\x02\x01\x00\x00\x00\x04#')
# f = open('code.c', 'rb')
# code = f.read()
# f.close()
# f2 = open('data.c', 'rb')
# codedata = f2.read()
# f2.close()
# print('CREATING PROCESS MEMORY')
# # processmemory = ProcessMemory(code, b'd\x00\x00\x00<\x00\x00\x00', b'')
# # processmemory = ProcessMemory(code, b'Hello!', b'')
# processmemory = ProcessMemory(code, codedata, b'')
# processmemory2 = ProcessMemory(code2, b'\x00\x00\x00\x00', b'')
# print(processmemory)
# print()
# print("CREATING MEMORY")
memory = Memory()
# print()
# print("CREATING COMPUTER")
computer = Computer()
computer.set_memory(memory)
operatingsystem = OperatingSystem(computer)
terminalscreen = TerminalScreen(computer)
harddrive = FileSystem(computer, "test.fs")
harddrive._backend_load()
# harddrive._format('Kevin2009')
# harddrive.filesystem = {'file.cbf' : bytearray(b'\xbc\x00\x00\x00\x00\x05\x03\x06\x0c&\x02\x06\x00folder\x00\x05\x01\x02\x04\x00\x06\x00\x00\x00\x00\x05\x00\x02\x04\x00\x1f\x00\x00\x00$3\x00\x05\x03\x06\x0c&\x02\x10\x00folder/../folder\x00\x05\x01\x02\x04\x00\x10\x00\x00\x00\x00\x05\x00\x02\x04\x00\x1a\x00\x00\x00$3\x00\x05\x03\x06\x0c&\x02\x08\x00test.txt\x00\x05\x01\x02\x04\x00\x08\x00\x00\x00\x00\x05\x0f\x06\x0c&\x02\n\x00test data!\x00\x05\x10\x02\x04\x00\n\x00\x00\x00\x00\x05\x00\x02\x04\x00\x1c\x00\x00\x00$3\x00\x05\x00\x02\x04\x00\x1b\x00\x00\x00$3\x00\x05\x00\x02\x04\x00\x01\x00\x00\x00\x00\x05\x01\x05\x03\x02\x06\x0c\x05\x03\x05\x03$3')}
# harddrive.write_file('code.cpu', b"""# Fibonacci Series
# 
# <ISLIB>
# 
# [.code]
# 
# # Place current value into stack
# MOV U[RAX], U[ES]
# MOV MEM[U[ES] : [0x4]], [1]
# 
# # Place last value into stack
# MOV U[RBX], U[ES]
# MOV MEM[U[ES] : [0x4]], [1]
# 
# # Beginning loop
# [beginloop]
# 
# # Write the current value
# MOV R[R9], MEM[U[RAX] : [0x4]]
# 
# # Change the value into a string
# LIB [0x0], [0x0]
# EIR
# 
# # Add a newline
# PUSHN ["\n"]
# ADD R[RBX], [0x1], R[RBX]
# 
# # Print the value
# MOV R[RAX], [1]
# MOV R[RCX], R[RBX]
# SUB U[ES], R[RBX], R[RBX]
# SYS
# EIR
# POPNR R[RCX]
# 
# # Update the values
# MOV R[RAX], MEM[U[RBX] : [0x4]]
# MOV MEM[U[RBX] : [0x4]], MEM[U[RAX] : [0x4]]
# ADD R[RAX], MEM[U[RAX] : [0x4]], MEM[U[RAX] : [0x4]]
# 
# # Loop
# CMP MEM[U[RAX] : [0x4]], [1d100]
# JLE SYM[beginloop]
# 
# # End
# HLT [0x0]""")
harddrive._backend_update()
computer.set_filesystem(harddrive)
computer.add_peripheral(terminalscreen)
computer.set_os(operatingsystem)
# print()
# print("CREATING CPU")
cpu = CPU(computer, memory)
computer.set_cpu(cpu)
# print()
# print('CREATING CPU CORES')
core = CPUCore(cpu)
cid = cpu.add_core(core)
core2 = CPUCore(cpu)
cid2 = cpu.add_core(core2)

cmdhandler = CMDHandler('')
cmdhandler.initialize(computer)
operatingsystem.set_cmd_handler(cmdhandler)
# print(core, core2)
# print()
# print('CREATING PROCESSES')
# t = PThread(0, MemorySection('stack', 0, b''), None)
# p = Process(processmemory, {0 : t}, 't')
# t2 = PThread(0, MemorySection('stack', 0, b''), None)
# p2 = Process(processmemory2, {0 : t2}, 't')
# print()
# print('RUNNING OPERATING SYSTEM')
# computer.operatingsystem.start_os()
# # time.sleep(0.1)
# computer.operatingsystem.terminal.print_terminal(b'STARTING PROCESS 0, DISPLAYING STDOUT\n')
# pid = computer.operatingsystem.process_create(p)[1]
# computer.operatingsystem.terminal.set_view(pid)
# pid2 = computer.operatingsystem.process_create(p2)[1]
# 
# # time.sleep(1)
# # pid2 = computer.operatingsystem.process_create(p2)[1]
# 
# print()
# print('RUNNING PROCESS')
# 
# computer.operatingsystem.process_await(pid)
# computer.operatingsystem.terminal.remove_view()
# 
# # wlib = WRITELIB(operatingsystem, 0, 0)
# # input_text = wlib.editor()
# # print(input_text)
# 
# print()
# print('FINISHED PROCESS')
# print(computer.operatingsystem.log)
# print()
# print(computer.operatingsystem.processes)
# print(computer.memory.memorypartitions[('proc', 0)].stack.data)
# print(computer.memory.memorypartitions[('proc', 0)].data.data)
# print(computer.operatingsystem.processes[0].stdout.data)
# print(computer.operatingsystem.processes[0].threads)
# print(computer.memory.memorypartitions)
# # computer.operatingsystem.process_await(pid2)
# # print(computer.operatingsystem.processes[1].threads[0].output)
# # print(computer.memory.memorypartitions[('proc', 1)].stack.data)
# print(computer.operatingsystem.processes[0].output)
# print("Done process 0")
# computer.operatingsystem.process_await(pid2)
# print(computer.operatingsystem.processes)
# # print(computer.memory.memorypartitions[('mem', 0)].data)
# # print(computer.memory.memorypartitions[('mem', 1)].data)
# computer.operatingsystem.stop_os()
# print(computer.filesystem.filesystem)
# print(p.cmdhandler.current_working_dir)

computer.start()
